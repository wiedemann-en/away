// <auto-generated />
using System;
using Away.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Away.Api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191224160508_V01")]
    partial class V01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloCategoriaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCategoria")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArticuloCategoria","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloLineaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdLinea")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArticuloLinea","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloMarcaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdMarca")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArticuloMarca","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdArticulo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<int?>("BultosXPallet");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CodigoEANBulto");

                    b.Property<string>("CodigoEANFraccion");

                    b.Property<string>("CodigoEANUnidad");

                    b.Property<string>("Color")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion");

                    b.Property<string>("DescripcionCorta");

                    b.Property<bool>("EsCompuesto");

                    b.Property<bool>("EsDeOferta");

                    b.Property<bool>("EsLibreDescripcion");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("GestionaStock");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdAlicuotaIva");

                    b.Property<long>("IdAlicuotaIvaDiferencial");

                    b.Property<long>("IdCategoria");

                    b.Property<long?>("IdCompania");

                    b.Property<long?>("IdEmpresa");

                    b.Property<long>("IdLinea");

                    b.Property<long>("IdMarca");

                    b.Property<long>("IdRubro");

                    b.Property<long>("IdSubTipo");

                    b.Property<long?>("IdSucursal");

                    b.Property<long>("IdTipo");

                    b.Property<long>("IdUnidadMedida");

                    b.Property<decimal?>("ImpuestosInternosFijos")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("ImpuestosInternosPorc")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("PercepcionIIBB")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(50);

                    b.Property<int>("UnidadesXBulto");

                    b.HasKey("Id");

                    b.HasIndex("IdAlicuotaIva");

                    b.HasIndex("IdAlicuotaIvaDiferencial");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdCompania");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdLinea");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdRubro");

                    b.HasIndex("IdSubTipo");

                    b.HasIndex("IdSucursal");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("Articulo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloRubroModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdRubro")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArticuloRubro","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloSubTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdSubTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdTipo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdTipo");

                    b.ToTable("ArticuloSubTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArticuloTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloUnidadMedidaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdUnidadMedida")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ArticuloUnidadMedida","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Business.CompaniaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCompania")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Compania","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Business.EmpresaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdEmpresa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<long>("IdCompania");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdCompania");

                    b.ToTable("Empresa","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Business.SucursalModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdSucursal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<long>("IdCompania");

                    b.Property<long>("IdEmpresa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdCompania");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Sucursal","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteCategoriaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCategoria")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ClienteCategoria","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("IdCliente");

                    b.Property<bool>("Activo");

                    b.Property<double?>("AlicuotaIB");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Grupo")
                        .HasMaxLength(50);

                    b.Property<long?>("IdCategoria");

                    b.Property<long?>("IdCompania");

                    b.Property<long>("IdCondicionIva");

                    b.Property<long?>("IdCondicionPago");

                    b.Property<long?>("IdEmpresa");

                    b.Property<long?>("IdRubro");

                    b.Property<long?>("IdSubTipo");

                    b.Property<long?>("IdSucursal");

                    b.Property<long?>("IdTipo");

                    b.Property<bool?>("IvaDiferencial");

                    b.Property<string>("NombreFantasia")
                        .HasMaxLength(100);

                    b.Property<bool?>("PercibirIB");

                    b.Property<int>("Rol");

                    b.Property<string>("Zona")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdCompania");

                    b.HasIndex("IdCondicionIva");

                    b.HasIndex("IdCondicionPago");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdRubro");

                    b.HasIndex("IdSubTipo");

                    b.HasIndex("IdSucursal");

                    b.HasIndex("IdTipo");

                    b.ToTable("Cliente","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteRubroModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdRubro")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ClienteRubro","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteSubTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdSubTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdTipo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdTipo");

                    b.ToTable("ClienteSubTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ClienteTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.AlicuotaIvaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdAlicuotaIva")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<double>("Alicuota");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AlicuotaIva","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.CondicionIvaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCondicionIva")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CondicionIva","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.CondicionPagoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCondicionPago")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Dias")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("CondicionPago","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.ContactoModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("IdContacto");

                    b.Property<bool>("Activo");

                    b.Property<string>("Empresa");

                    b.Property<bool>("EsPrincipal");

                    b.Property<long?>("IdEnteRelacion");

                    b.Property<string>("Puesto");

                    b.HasKey("Id");

                    b.HasIndex("IdEnteRelacion");

                    b.ToTable("Contacto","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteDocumentoTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EnteDocumentoTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteDomicilioModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdDomicilio")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(12);

                    b.Property<string>("Cuerpo")
                        .HasMaxLength(12);

                    b.Property<string>("Departamento")
                        .HasMaxLength(12);

                    b.Property<long>("IdEnte");

                    b.Property<long>("IdLocalidad");

                    b.Property<long>("IdPais");

                    b.Property<long>("IdPartido");

                    b.Property<long>("IdProvincia");

                    b.Property<long>("IdTipo");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Piso")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.HasIndex("IdEnte");

                    b.HasIndex("IdLocalidad");

                    b.HasIndex("IdTipo");

                    b.ToTable("EnteDomicilio","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteDomicilioTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EnteDomicilioTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdEnte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("ApellidoRazonSocial")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("EsPersonaJuridica");

                    b.Property<long>("IdTipoDocumento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100);

                    b.Property<string>("NroFiscal")
                        .IsRequired()
                        .HasMaxLength(13);

                    b.Property<string>("TipoEnte")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("Ente","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteTelefonoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTelefono")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("CodigoArea")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<long>("IdEnte");

                    b.Property<long>("IdTipo");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.HasIndex("IdEnte");

                    b.HasIndex("IdTipo");

                    b.ToTable("EnteTelefono","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteTelefonoTipoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EnteTelefonoTipo","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.LocalidadModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdLocalidad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdPais");

                    b.Property<long>("IdPartido");

                    b.Property<long>("IdProvincia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdPartido");

                    b.ToTable("Localidad","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.PaisModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdPais")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Pais","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.PartidoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdPartido")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdPais");

                    b.Property<long>("IdProvincia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Partido","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.ProvinciaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdProvincia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("IdPais");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Provincia","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.LogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdLog")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<string>("Detalle")
                        .IsUnicode(true);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Origen")
                        .IsRequired();

                    b.Property<string>("Source");

                    b.Property<string>("StackTrace")
                        .IsUnicode(true);

                    b.Property<string>("TargetSite");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("Logs","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Provider.ProveedorModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("IdProveedor");

                    b.Property<bool>("Activo");

                    b.Property<long?>("IdCompania");

                    b.Property<long>("IdCondicionIva");

                    b.Property<long?>("IdCondicionPago");

                    b.Property<long?>("IdEmpresa");

                    b.Property<long?>("IdSucursal");

                    b.HasKey("Id");

                    b.HasIndex("IdCompania");

                    b.HasIndex("IdCondicionIva");

                    b.HasIndex("IdCondicionPago");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Proveedor","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.RecursoSistemaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdRecurso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("ApiName")
                        .HasMaxLength(128);

                    b.Property<string>("AppState")
                        .HasMaxLength(128);

                    b.Property<string>("AppStatePadre")
                        .HasMaxLength(128);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255);

                    b.Property<string>("Permiso")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("RecursosDependientes")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("RecursoSistema","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.RolModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdRol")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Rol","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.RolRecursoModel", b =>
                {
                    b.Property<long>("IdRol");

                    b.Property<long>("IdRecurso");

                    b.HasKey("IdRol", "IdRecurso");

                    b.HasIndex("IdRecurso");

                    b.ToTable("RolRecurso","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.UsuarioModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdUsuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long?>("IdCompania");

                    b.Property<long?>("IdEmpresa");

                    b.Property<long>("IdRol");

                    b.Property<long?>("IdSucursal");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Usuario")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("IdCompania");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Usuario","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Transaction.MovimientoCajaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdMovimientoCaja")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<long>("IdEnte");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdEnte");

                    b.ToTable("MovimientoCaja","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Transaction.OrdenCabeceraModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdOrdenCabecera")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CodTipoOrden")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("EsUrgente");

                    b.Property<DateTime?>("FechaFinaliacion");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime?>("FechaProcesamiento");

                    b.Property<DateTime?>("FechaVencimiento");

                    b.Property<long>("IdCliente");

                    b.Property<long?>("IdCompania");

                    b.Property<long?>("IdContacto");

                    b.Property<long?>("IdEmpresa");

                    b.Property<long?>("IdSucursal");

                    b.Property<string>("NroComprobante")
                        .HasMaxLength(100);

                    b.Property<string>("NroOC")
                        .HasMaxLength(100);

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000);

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdCompania");

                    b.HasIndex("IdContacto");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdSucursal");

                    b.ToTable("OrdenCabecera","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Transaction.OrdenDetalleModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdOrdenDetalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticuloCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ArticuloDescripcion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("ArticuloPrecio");

                    b.Property<double>("Cantidad");

                    b.Property<string>("CodEstado");

                    b.Property<long>("IdArticulo");

                    b.Property<long>("IdOrdenCabecera");

                    b.Property<string>("Observaciones");

                    b.Property<int>("Orden");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdOrdenCabecera");

                    b.ToTable("OrdenDetalle","dbo");
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.AlicuotaIvaModel", "AlicuotaIva")
                        .WithMany("Articulos")
                        .HasForeignKey("IdAlicuotaIva")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.AlicuotaIvaModel", "AlicuotaIvaDiferencial")
                        .WithMany("ArticulosDiferencial")
                        .HasForeignKey("IdAlicuotaIvaDiferencial")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloCategoriaModel", "Categoria")
                        .WithMany("Articulos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Articulos")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.EmpresaModel", "Empresa")
                        .WithMany("Articulos")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloLineaModel", "Linea")
                        .WithMany("Articulos")
                        .HasForeignKey("IdLinea")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloMarcaModel", "Marca")
                        .WithMany("Articulos")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloRubroModel", "Rubro")
                        .WithMany("Articulos")
                        .HasForeignKey("IdRubro")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloSubTipoModel", "SubTipo")
                        .WithMany("Articulos")
                        .HasForeignKey("IdSubTipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.SucursalModel", "Sucursal")
                        .WithMany("Articulos")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloTipoModel", "Tipo")
                        .WithMany("Articulos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloUnidadMedidaModel", "UnidadMedida")
                        .WithMany("Articulos")
                        .HasForeignKey("IdUnidadMedida")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("ArticuloModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("ArticuloModelId");

                            b1.ToTable("Articulo","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Article.ArticuloModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "ArticuloModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Article.ArticuloSubTipoModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloTipoModel", "Tipo")
                        .WithMany("SubTipos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Business.CompaniaModel", b =>
                {
                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("CompaniaModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("CompaniaModelId");

                            b1.ToTable("Compania","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Business.CompaniaModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "CompaniaModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Business.EmpresaModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Empresas")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("EmpresaModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("EmpresaModelId");

                            b1.ToTable("Empresa","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Business.EmpresaModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "EmpresaModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Business.SucursalModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Sucursales")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.EmpresaModel", "Empresa")
                        .WithMany("Sucursales")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("SucursalModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("SucursalModelId");

                            b1.ToTable("Sucursal","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Business.SucursalModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "SucursalModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "Ente")
                        .WithOne("Cliente")
                        .HasForeignKey("Away.Api.Data.Entities.Client.ClienteModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Client.ClienteCategoriaModel", "Categoria")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.CondicionIvaModel", "CondicionIva")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCondicionIva")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.CondicionPagoModel", "CondicionPago")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCondicionPago")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.EmpresaModel", "Empresa")
                        .WithMany("Clientes")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Client.ClienteRubroModel", "Rubro")
                        .WithMany("Clientes")
                        .HasForeignKey("IdRubro")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Client.ClienteSubTipoModel", "SubTipo")
                        .WithMany("Clientes")
                        .HasForeignKey("IdSubTipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.SucursalModel", "Sucursal")
                        .WithMany("Clientes")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Client.ClienteTipoModel", "Tipo")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("ClienteModelId");

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("ClienteModelId");

                            b1.ToTable("Cliente","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Client.ClienteModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "ClienteModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Client.ClienteSubTipoModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Client.ClienteTipoModel", "Tipo")
                        .WithMany("SubTipos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.ContactoModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "Ente")
                        .WithOne("Contacto")
                        .HasForeignKey("Away.Api.Data.Entities.Common.ContactoModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "EnteRelacion")
                        .WithMany("Contactos")
                        .HasForeignKey("IdEnteRelacion");

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("ContactoModelId");

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("ContactoModelId");

                            b1.ToTable("Contacto","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Common.ContactoModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "ContactoModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteDomicilioModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "Ente")
                        .WithMany("Domicilios")
                        .HasForeignKey("IdEnte")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Common.LocalidadModel", "Localidad")
                        .WithMany("Domicilios")
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.EnteDomicilioTipoModel", "Tipo")
                        .WithMany("Domicilios")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteDocumentoTipoModel", "TipoDocumento")
                        .WithMany("Entes")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("EnteModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("EnteModelId");

                            b1.ToTable("Ente","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Common.EnteModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "EnteModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.EnteTelefonoModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "Ente")
                        .WithMany("Telefonos")
                        .HasForeignKey("IdEnte")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Common.EnteTelefonoTipoModel", "Tipo")
                        .WithMany("Telefonos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.LocalidadModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.PartidoModel", "Partido")
                        .WithMany("Localidades")
                        .HasForeignKey("IdPartido")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.PartidoModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.ProvinciaModel", "Provincia")
                        .WithMany("Partidos")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Common.ProvinciaModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.PaisModel", "Pais")
                        .WithMany("Provincias")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Provider.ProveedorModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "Ente")
                        .WithOne("Proveedor")
                        .HasForeignKey("Away.Api.Data.Entities.Provider.ProveedorModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.CondicionIvaModel", "CondicionIva")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdCondicionIva")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.CondicionPagoModel", "CondicionPago")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdCondicionPago")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.EmpresaModel", "Empresa")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.SucursalModel", "Sucursal")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("ProveedorModelId");

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("ProveedorModelId");

                            b1.ToTable("Proveedor","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Provider.ProveedorModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "ProveedorModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.RolModel", b =>
                {
                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("RolModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("RolModelId");

                            b1.ToTable("Rol","dbo");

                            b1.HasOne("Away.Api.Data.Entities.SystemSecurity.RolModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "RolModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.RolRecursoModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.SystemSecurity.RecursoSistemaModel", "Recurso")
                        .WithMany("RolRecursos")
                        .HasForeignKey("IdRecurso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.SystemSecurity.RolModel", "Rol")
                        .WithMany("Recursos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Away.Api.Data.Entities.SystemSecurity.UsuarioModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.EmpresaModel", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.SystemSecurity.RolModel", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.SucursalModel", "Sucursal")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("UsuarioModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("UsuarioModelId");

                            b1.ToTable("Usuario","dbo");

                            b1.HasOne("Away.Api.Data.Entities.SystemSecurity.UsuarioModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "UsuarioModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Transaction.MovimientoCajaModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Common.EnteModel", "Ente")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdEnte")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("MovimientoCajaModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("MovimientoCajaModelId");

                            b1.ToTable("MovimientoCaja","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Transaction.MovimientoCajaModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "MovimientoCajaModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Transaction.OrdenCabeceraModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Client.ClienteModel", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Business.CompaniaModel", "Compania")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdCompania")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Common.ContactoModel", "Contacto")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdContacto");

                    b.HasOne("Away.Api.Data.Entities.Business.EmpresaModel", "Empresa")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Away.Api.Data.Entities.Business.SucursalModel", "Sucursal")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Away.Api.Data.Entities.Audit.RecordAudit", "Auditoria", b1 =>
                        {
                            b1.Property<long>("OrdenCabeceraModelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnName("AudFechaCreacion");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnName("AudFechaModificacion");

                            b1.Property<DateTime?>("FechaSincornizacion")
                                .HasColumnName("AudFechaSincornizacion");

                            b1.Property<string>("UsuarioCreacion")
                                .IsRequired()
                                .HasColumnName("AudUsuarioCreacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioModificacion")
                                .HasColumnName("AudUsuarioModificacion")
                                .HasMaxLength(128);

                            b1.Property<string>("UsuarioSincronizacion")
                                .HasColumnName("AudUsuarioSincronizacion")
                                .HasMaxLength(128);

                            b1.HasKey("OrdenCabeceraModelId");

                            b1.ToTable("OrdenCabecera","dbo");

                            b1.HasOne("Away.Api.Data.Entities.Transaction.OrdenCabeceraModel")
                                .WithOne("Auditoria")
                                .HasForeignKey("Away.Api.Data.Entities.Audit.RecordAudit", "OrdenCabeceraModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Away.Api.Data.Entities.Transaction.OrdenDetalleModel", b =>
                {
                    b.HasOne("Away.Api.Data.Entities.Article.ArticuloModel", "Articulo")
                        .WithMany("OrdenesDetalle")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Away.Api.Data.Entities.Transaction.OrdenCabeceraModel", "OrdenCabecera")
                        .WithMany("Detalles")
                        .HasForeignKey("IdOrdenCabecera")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
